# Advanced MCP Tool Integration

## Core Principles
- Use real MCP tools for specialized tasks
- Integrate multiple tools for complex workflows
- Monitor tool performance and effectiveness
- Document tool usage and best practices

## Real MCP Tools
- **Playwright**: Browser automation, testing, and debugging (mcp-playwright)
- **Sequential Thinking**: Step-by-step planning and problem solving (@modelcontextprotocol/server-sequential-thinking)
- **Postgres**: Database operations and analytics (@modelcontextprotocol/server-postgres)
- **Brave Search**: Web search and research (@modelcontextprotocol/server-brave-search)
- **GitHub**: Repository and documentation integration (@modelcontextprotocol/server-github)

## Tool Usage Patterns
- Use Playwright for web testing and automation
- Use Sequential Thinking for planning and workflow automation
- Use Postgres for knowledge storage and queries
- Use Brave Search for research and information retrieval
- Use GitHub for documentation and code analysis
- Combine tools for complex workflows
- Monitor tool performance and usage

## Integration Workflows
- Web Testing + Documentation: Playwright → Sequential Thinking → GitHub
- Database + Analysis: Postgres → Sequential Thinking → Brave Search
- Documentation + Research: GitHub → Brave Search → Sequential Thinking

## Performance Considerations
- Monitor tool response times
- Cache frequently accessed data
- Use appropriate ports for each tool
- Implement proper error handling

## Security Best Practices
- Secure sensitive data in Postgres
- Use environment variables for API keys
- Implement proper access controls
- Monitor tool usage for security

## Custom Tool Development
- Extend workflows using Sequential Thinking and Postgres
- Document tool capabilities in project memory
- Test custom workflows thoroughly
- Integrate with existing workflow

@advanced-mcp @real-tools @integration @performance @security
description: Advanced MCP tool integration and workflow automation
globs:
alwaysApply: false
---
description:
globs:
alwaysApply: false
---
 